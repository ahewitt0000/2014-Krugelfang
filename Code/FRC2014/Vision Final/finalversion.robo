<head><version>2.59.9</version></head>
<Spherical_Unwarp>
  <crop_border>FALSE</crop_border>
  <curvature>1.0</curvature>
  <scale>1.0</scale>
  <x_center>0</x_center>
  <y_center>0</y_center>
  <z_rotation>0</z_rotation>
</Spherical_Unwarp>
<Blob_Filter>
  <create_blob_array_variable>FALSE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>129</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0.23</weight_threshold>
      </filter>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Adaptive_Threshold>
  <channel_type>1</channel_type>
  <filter_size>100</filter_size>
  <max_threshold>255</max_threshold>
  <mean_offset>-25</mean_offset>
  <min_threshold>0</min_threshold>
</Adaptive_Threshold>
<Blob_Filter>
  <create_blob_array_variable>FALSE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>8</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <minimum_size>100</minimum_size>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Marker>
  <include_graphics>0</include_graphics>
  <name>Two Targets</name>
  <revert_to>Current</revert_to>
</Marker>
<Blob_Filter>
  <create_blob_array_variable>FALSE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>1</count_threshold>
        <create_array>0</create_array>
        <filter_id>63</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <ratio>.125</ratio>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<VBScript_Program>
  <script>list = GetArrayVariable("BFR_COORDINATES")
if isArray(list) then
  if ubound(list) &gt; 0 then

		targetPixelHeight = 0
    targetSamples = 0

    ' calibrated for an Axis camera
    imageHeight = GetVariable("IMAGE_HEIGHT")
  	cameraFieldOfView = 49

	  targetHeight = 32

    for i = 0 to ubound(list) step 8
      ' grab list of coordinates from blob_replace
	  	' note the array is sorted by previous module in a specific order
      righty = list(i+1)
      rightyy = list(i+7)
      lefty = list(i+3)
      leftyy = list(i+5)

			' based on these two side lines get the center line height
		  ' the center line is used since we want to aim to the center
  		' of the target. This also removes any perspective distortion
	  	' where the right or left size may be a couple inches closer
		  ' or futher away from the camera
  		targetPixelHeight = targetPixelHeight + ((lefty - leftyy) + (righty - rightyy)) / 2

			targetSamples = targetSamples + 1

    next

		targetPixelHeight = targetPixelHeight / targetSamples

    ' we can use a known distance to determine FOV if we don't know it
	  ' measuredDistance = 10.0*12.0
 	  ' write "Calculated FOV " &amp; (((atan((((targetHeight*imageHeight)/targetPixelHeight)/2)/measuredDistance)*2.0)*180.0)/3.14159) &amp; vbCRLF

    ' determine distance in inches
    totalDistance = (((targetHeight*imageHeight)/targetPixelHeight)/2)/tan(((cameraFieldOfView*3.14159)/180.0)/2.0)
	
		SetVariable "Distance", totalDistance
		'CInt((totalDistance*100)/12)/100

	end if
end if

</script>
  <source_mode>gui</source_mode>
  <tab_size_index>1</tab_size_index>
</VBScript_Program>
<Blob_Replace>
  <color_index>3</color_index>
  <fill_shape>TRUE</fill_shape>
  <order_array_on_x>FALSE</order_array_on_x>
  <order_array_on_y>FALSE</order_array_on_y>
  <overlay_image>Source</overlay_image>
  <shape_index>15</shape_index>
  <thickness>1</thickness>
</Blob_Replace>
<Marker>
  <include_graphics>0</include_graphics>
  <name>vertical</name>
  <revert_to>Current</revert_to>
</Marker>
<Mask>
  <image1>Two Targets</image1>
  <image2>Two Targets</image2>
  <mask>Current</mask>
</Mask>
<Python_Program_v2x>
  <filename>.\Angle Calulation.py</filename>
  <script>import rr
</script>
  <source_mode>file</source_mode>
  <tab_size_index>1</tab_size_index>
</Python_Program_v2x>
<Blob_Filter>
  <create_blob_array_variable>TRUE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>44</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0</weight_threshold>
        <y_coordinate>136</y_coordinate>
      </filter>
      <filter:2>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>63</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <ratio>8</ratio>
        <weight_threshold>0.29</weight_threshold>
      </filter:2>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Blob_Replace>
  <color_index>5</color_index>
  <fill_shape>TRUE</fill_shape>
  <order_array_on_x>FALSE</order_array_on_x>
  <order_array_on_y>FALSE</order_array_on_y>
  <overlay_image>Source</overlay_image>
  <thickness>1</thickness>
</Blob_Replace>
<Mask>
  <image1>vertical</image1>
  <image2>Current</image2>
  <mask>Current</mask>
</Mask>
<Display_Variables>
  <border_color>red</border_color>
  <dim_background>TRUE</dim_background>
  <display_as_annotation>FALSE</display_as_annotation>
  <display_value_only>FALSE</display_value_only>
  <font_color>white</font_color>
  <font_size>Normal (10pt)</font_size>
  <northeast>Distance
</northeast>
  <northwest>DistanceToWall
</northwest>
</Display_Variables>
<NetworkTables>
  <delay>100</delay>
  <filter_type_index>0</filter_type_index>
  <hostname>10.0.58.2</hostname>
  <port>1735</port>
  <prefix>/SmartDashboard/</prefix>
  <variables_to_send>BLOB_COUNT
Distance
DistanceToWall</variables_to_send>
  <variable_type_index>0</variable_type_index>
</NetworkTables>
